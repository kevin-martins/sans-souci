import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  notifications: []
};

export const dataSlice = createSlice({
  name: 'data',
  initialState,
  reducers: {
    addNotification: (state, action) => {
      state.notifications.unshift(action.payload);
    },
    removeNotification: (state, action) => {
      console.log(action)
      state.notifications = state.notifications.filter((n) => n.id !== action.payload.id)
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    // builder
    //   .addCase(incrementAsync.pending, (state) => {
    //     state.status = 'loading';
    //   })
    //   .addCase(incrementAsync.fulfilled, (state, action) => {
    //     state.status = 'idle';
    //     state.value += action.payload;
    //   });
  },
});

export const { addNotification, removeNotification } = dataSlice.actions;

export default dataSlice.reducer;
